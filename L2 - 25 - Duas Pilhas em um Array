#include <stdio.h>
#include <stdlib.h>

#define TAMANHO 100

typedef struct {
    int dados[TAMANHO];
    int topo1;
    int topo2;
} DuasPilhas;

// Inicializa as duas pilhas
void inicializar(DuasPilhas* p) {
    p->topo1 = -1;
    p->topo2 = TAMANHO;
}

// Insere na pilha 1
int push1(DuasPilhas* p, int valor) {
    if (p->topo1 + 1 == p->topo2) return 0; // sem espaço
    p->dados[++(p->topo1)] = valor;
    return 1;
}

// Insere na pilha 2
int push2(DuasPilhas* p, int valor) {
    if (p->topo1 + 1 == p->topo2) return 0; // sem espaço
    p->dados[--(p->topo2)] = valor;
    return 1;
}

// Remove da pilha 1
int pop1(DuasPilhas* p, int* valor) {
    if (p->topo1 == -1) return 0; // pilha vazia
    *valor = p->dados[(p->topo1)--];
    return 1;
}

// Remove da pilha 2
int pop2(DuasPilhas* p, int* valor) {
    if (p->topo2 == TAMANHO) return 0; // pilha vazia
    *valor = p->dados[(p->topo2)++];
    return 1;
}

// Retorna o topo da pilha 1
int topo1(DuasPilhas* p, int* valor) {
    if (p->topo1 == -1) return 0;
    *valor = p->dados[p->topo1];
    return 1;
}

// Retorna o topo da pilha 2
int topo2(DuasPilhas* p, int* valor) {
    if (p->topo2 == TAMANHO) return 0;
    *valor = p->dados[p->topo2];
    return 1;
}

// Exemplo de uso
int main() {
    DuasPilhas p;
    inicializar(&p);

    push1(&p, 10);
    push1(&p, 20);
    push2(&p, 100);
    push2(&p, 200);

    int x;

    pop1(&p, &x);
    printf("Pilha 1 - pop: %d\n", x);

    pop2(&p, &x);
    printf("Pilha 2 - pop: %d\n", x);

    topo1(&p, &x);
    printf("Pilha 1 - topo: %d\n", x);

    topo2(&p, &x);
    printf("Pilha 2 - topo: %d\n", x);

    return 0;
}
